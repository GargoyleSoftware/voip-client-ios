.TH "Managing authentication: userid and passwords" 3 "Mon Feb 6 2012" "Version 3.5.0" "liblinphone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Managing authentication: userid and passwords \- 
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct _LinphoneAuthInfo \fBLinphoneAuthInfo\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLinphoneAuthInfo\fP * \fBlinphone_auth_info_new\fP (const char *username, const char *userid, const char *passwd, const char *ha1, const char *realm)"
.br
.ti -1c
.RI "const char * \fBlinphone_auth_info_get_username\fP (const \fBLinphoneAuthInfo\fP *i)"
.br
.ti -1c
.RI "const char * \fBlinphone_auth_info_get_passwd\fP (const \fBLinphoneAuthInfo\fP *i)"
.br
.ti -1c
.RI "void \fBlinphone_auth_info_set_passwd\fP (\fBLinphoneAuthInfo\fP *info, const char *passwd)"
.br
.ti -1c
.RI "void \fBlinphone_auth_info_set_username\fP (\fBLinphoneAuthInfo\fP *info, const char *username)"
.br
.ti -1c
.RI "void \fBlinphone_auth_info_set_userid\fP (\fBLinphoneAuthInfo\fP *info, const char *userid)"
.br
.ti -1c
.RI "void \fBlinphone_auth_info_destroy\fP (\fBLinphoneAuthInfo\fP *obj)"
.br
.ti -1c
.RI "const \fBLinphoneAuthInfo\fP * \fBlinphone_core_find_auth_info\fP (\fBLinphoneCore\fP *lc, const char *realm, const char *username)"
.br
.ti -1c
.RI "void \fBlinphone_core_add_auth_info\fP (\fBLinphoneCore\fP *lc, const \fBLinphoneAuthInfo\fP *info)"
.br
.ti -1c
.RI "void \fBlinphone_core_abort_authentication\fP (\fBLinphoneCore\fP *lc, \fBLinphoneAuthInfo\fP *info)"
.br
.ti -1c
.RI "void \fBlinphone_core_remove_auth_info\fP (\fBLinphoneCore\fP *lc, const \fBLinphoneAuthInfo\fP *info)"
.br
.ti -1c
.RI "const MSList * \fBlinphone_core_get_auth_info_list\fP (const \fBLinphoneCore\fP *lc)"
.br
.ti -1c
.RI "void \fBlinphone_core_clear_all_auth_info\fP (\fBLinphoneCore\fP *lc)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct _LinphoneAuthInfo \fBLinphoneAuthInfo\fP"Object holding authentication information'\&.
.PP
\fBNote:\fP
.RS 4
The object's fields should not be accessed directly'\&. Prefer using the accessor methods'\&.
.RE
.PP
In most case, authentication information consists of a username and password'\&. Sometimes, a userid is required by proxy, and realm can be useful to discriminate different SIP domains'\&.
.PP
Once created and filled, a LinphoneAuthInfo must be added to the LinphoneCore in order to become known and used automatically when needed'\&. Use \fBlinphone_core_add_auth_info()\fP for that purpose'\&.
.PP
The LinphoneCore object can take the initiative to request authentication information when needed to the application through the auth_info_requested callback of the LinphoneCoreVTable structure'\&.
.PP
The application can respond to this information request later using \fBlinphone_core_add_auth_info()\fP'\&. This will unblock all pending authentication transactions and retry them with authentication headers'\&. 
.SH "Function Documentation"
.PP 
.SS "\fBLinphoneAuthInfo\fP* linphone_auth_info_new (const char *username, const char *userid, const char *passwd, const char *ha1, const char *realm)"Create a LinphoneAuthInfo object with supplied information'\&.
.PP
The object can be created empty, that is with all arguments set to NULL'\&. Username, userid, password and realm can be set later using specific methods'\&. 
.SS "const char* linphone_auth_info_get_username (const \fBLinphoneAuthInfo\fP *i)"Returns username'\&. 
.SS "const char* linphone_auth_info_get_passwd (const \fBLinphoneAuthInfo\fP *i)"Returns password'\&. 
.SS "void linphone_auth_info_set_passwd (\fBLinphoneAuthInfo\fP *info, const char *passwd)"Sets the password'\&. 
.SS "void linphone_auth_info_set_username (\fBLinphoneAuthInfo\fP *info, const char *username)"Sets the username'\&. 
.SS "void linphone_auth_info_set_userid (\fBLinphoneAuthInfo\fP *info, const char *userid)"Sets userid'\&. 
.SS "void linphone_auth_info_destroy (\fBLinphoneAuthInfo\fP *obj)"Destroys a LinphoneAuthInfo object'\&. 
.SS "const \fBLinphoneAuthInfo\fP* linphone_core_find_auth_info (\fBLinphoneCore\fP *lc, const char *realm, const char *username)"Retrieves a LinphoneAuthInfo previously entered into the LinphoneCore'\&. 
.SS "void linphone_core_add_auth_info (\fBLinphoneCore\fP *lc, const \fBLinphoneAuthInfo\fP *info)"Adds authentication information to the LinphoneCore'\&.
.PP
This information will be used during all SIP transacations that require authentication'\&. 
.SS "void linphone_core_abort_authentication (\fBLinphoneCore\fP *lc, \fBLinphoneAuthInfo\fP *info)"This method is used to abort a user authentication request initiated by LinphoneCore from the auth_info_requested callback of LinphoneCoreVTable'\&. 
.SS "void linphone_core_remove_auth_info (\fBLinphoneCore\fP *lc, const \fBLinphoneAuthInfo\fP *info)"Removes an authentication information object'\&. 
.SS "const MSList* linphone_core_get_auth_info_list (const \fBLinphoneCore\fP *lc)"Returns an unmodifiable list of currently entered LinphoneAuthInfo'\&. 
.SS "void linphone_core_clear_all_auth_info (\fBLinphoneCore\fP *lc)"Clear all authentication information'\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for liblinphone from the source code'\&.
