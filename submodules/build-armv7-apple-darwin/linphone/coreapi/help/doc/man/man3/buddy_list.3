.TH "Managing Buddies and buddy list and presence" 3 "Mon Feb 6 2012" "Version 3.5.0" "liblinphone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Managing Buddies and buddy list and presence \- 
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fB_LinphoneOnlineStatus\fP \fBLinphoneOnlineStatus\fP"
.br
.ti -1c
.RI "typedef struct _LinphoneFriend \fBLinphoneFriend\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBLinphoneSubscribePolicy\fP { \fBLinphoneSPWait\fP, \fBLinphoneSPDeny\fP, \fBLinphoneSPAccept\fP }"
.br
.ti -1c
.RI "enum \fB_LinphoneOnlineStatus\fP { \fBLinphoneStatusOffline\fP, \fBLinphoneStatusOnline\fP, \fBLinphoneStatusBusy\fP, \fBLinphoneStatusBeRightBack\fP, \fBLinphoneStatusAway\fP, \fBLinphoneStatusOnThePhone\fP, \fBLinphoneStatusOutToLunch\fP, \fBLinphoneStatusDoNotDisturb\fP, \fBLinphoneStatusMoved\fP, \fBLinphoneStatusAltService\fP, \fBLinphoneStatusPending\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLinphoneFriend\fP * \fBlinphone_friend_new\fP ()"
.br
.ti -1c
.RI "\fBLinphoneFriend\fP * \fBlinphone_friend_new_with_addr\fP (const char *addr)"
.br
.ti -1c
.RI "void \fBlinphone_friend_destroy\fP (\fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "int \fBlinphone_friend_set_addr\fP (\fBLinphoneFriend\fP *fr, const \fBLinphoneAddress\fP *address)"
.br
.ti -1c
.RI "const \fBLinphoneAddress\fP * \fBlinphone_friend_get_address\fP (const \fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "bool_t \fBlinphone_friend_subscribes_enabled\fP (const \fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "int \fBlinphone_friend_enable_subscribes\fP (\fBLinphoneFriend\fP *fr, bool_t val)"
.br
.ti -1c
.RI "int \fBlinphone_friend_set_inc_subscribe_policy\fP (\fBLinphoneFriend\fP *fr, \fBLinphoneSubscribePolicy\fP pol)"
.br
.ti -1c
.RI "\fBLinphoneSubscribePolicy\fP \fBlinphone_friend_get_inc_subscribe_policy\fP (const \fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "void \fBlinphone_friend_edit\fP (\fBLinphoneFriend\fP *fr)"
.br
.ti -1c
.RI "void \fBlinphone_friend_done\fP (\fBLinphoneFriend\fP *fr)"
.br
.ti -1c
.RI "\fBLinphoneOnlineStatus\fP \fBlinphone_friend_get_status\fP (const \fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "const char * \fBlinphone_online_status_to_string\fP (\fBLinphoneOnlineStatus\fP ss)"
.br
.ti -1c
.RI "void \fBlinphone_core_set_presence_info\fP (\fBLinphoneCore\fP *lc, int minutes_away, const char *alternative_contact, \fBLinphoneOnlineStatus\fP os)"
.br
.ti -1c
.RI "\fBLinphoneOnlineStatus\fP \fBlinphone_core_get_presence_info\fP (const \fBLinphoneCore\fP *lc)"
.br
.ti -1c
.RI "void \fBlinphone_core_add_friend\fP (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *fr)"
.br
.ti -1c
.RI "void \fBlinphone_core_remove_friend\fP (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *fr)"
.br
.ti -1c
.RI "void \fBlinphone_core_reject_subscriber\fP (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *lf)"
.br
.ti -1c
.RI "const MSList * \fBlinphone_core_get_friend_list\fP (const \fBLinphoneCore\fP *lc)"
.br
.ti -1c
.RI "void \fBlinphone_core_notify_all_friends\fP (\fBLinphoneCore\fP *lc, \fBLinphoneOnlineStatus\fP os)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBBuddies and buddy list\fP 
.br
Each buddy is represented by a \fBLinphoneFriend\fP object created by function \fBlinphone_friend_new()\fP'\&. Buddy configuration parameters like \fBsip uri \fP or \fBstatus publication \fP policy for this \fBfriend \fP are configurable for each buddy'\&. 
.br
Here under a typical buddy creation: 
.br
 
.PP
.nf
LinphoneFriend* my_friend=linphone_friend_new_with_addr('sip:joe@sip\&.linphone\&.org'); /*creates friend object for buddy joe*/
linphone_friend_enable_subscribes(my_friend,TRUE); /*configure this friend to emit SUBSCRIBE message after being added to LinphoneCore*/
linphone_friend_set_inc_subscribe_policy(my_friend,LinphoneSPAccept); /* accept Incoming subscription request for this friend*/

.fi
.PP
 \fBfriends \fP status changes are reported by callback \fBLinphoneCoreVTable'\&.notify_presence_recv\fP 
.PP
.nf
static void notify_presence_recv_updated (struct _LinphoneCore *lc,  LinphoneFriend *friend) {
        const LinphoneAddress* friend_address = linphone_friend_get_address(friend);
        printf('New state state [%s] for user id [%s] \n'
                                ,linphone_online_status_to_string(linphone_friend_get_status(friend))
                                ,linphone_address_as_string (friend_address));
}

.fi
.PP
 
.br
Once created a buddy can be added to the buddy list using function \fBlinphone_core_add_friend()\fP '\&. Added friends will be notified about \fBlocal status changes \fP 
.br
 Any subsequente modifications to \fBLinphoneFriend\fP must be first started by a call to function \fBlinphone_friend_edit()\fP and validated by function \fBlinphone_friend_done()\fP 
.PP
.nf
linphone_friend_edit(my_friend); /* start editing friend */
linphone_friend_enable_subscribes(my_friend,FALSE); /*disable subscription for this friend*/
linphone_friend_done(my_friend); /*commit changes triggering an UNSUBSCRIBE message*/

.fi
.PP
.PP
\fB Publishing presence status \fP 
.br
Local presence status can be changed using function \fBlinphone_core_set_presence_info()\fP '\&.New status is propagated to all friends \fBpreviously added \fP to \fBLinphoneCore\fP'\&.
.PP
\fBHandling incoming subscription request\fP 
.br
 New incoming subscription requests are process according to \fBthe incoming subscription policy state \fP for subscription initiated by \fBmembers of the buddy list'\&. \fP 
.br
 For incoming request comming from an unknown buddy, the call back \fBLinphoneCoreVTable'\&.new_subscription_request\fP is invoked'\&.
.PP

.br
 A complete tutorial can be found at : \fBRegistration tutorial\fP 
.SH "Typedef Documentation"
.PP 
.SS "typedef enum \fB_LinphoneOnlineStatus\fP \fBLinphoneOnlineStatus\fP"Enum describing remote friend status 
.SS "typedef struct _LinphoneFriend \fBLinphoneFriend\fP"Represents a buddy, all presence actions like subscription and status change notification are performed on this object 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBLinphoneSubscribePolicy\fP"Enum controlling behavior for incoming subscription request'\&. 
.br
 Use by \fBlinphone_friend_set_inc_subscribe_policy()\fP 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fILinphoneSPWait \fP\fP
Does not automatically accept an incoming subscription request'\&. This policy implies that a decision has to be taken for each incoming subscription request notified by callback \fBLinphoneCoreVTable'\&.new_subscription_request\fP 
.TP
\fB\fILinphoneSPDeny \fP\fP
Rejects incoming subscription request'\&. 
.TP
\fB\fILinphoneSPAccept \fP\fP
Automatically accepts a subscription request'\&. 
.SS "enum \fB_LinphoneOnlineStatus\fP"Enum describing remote friend status 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fILinphoneStatusOffline \fP\fP
Offline 
.TP
\fB\fILinphoneStatusOnline \fP\fP
Online 
.TP
\fB\fILinphoneStatusBusy \fP\fP
Busy 
.TP
\fB\fILinphoneStatusBeRightBack \fP\fP
Be right back 
.TP
\fB\fILinphoneStatusAway \fP\fP
Away 
.TP
\fB\fILinphoneStatusOnThePhone \fP\fP
On the phone 
.TP
\fB\fILinphoneStatusOutToLunch \fP\fP
Out to lunch 
.TP
\fB\fILinphoneStatusDoNotDisturb \fP\fP
Do not disturb 
.TP
\fB\fILinphoneStatusMoved \fP\fP
Moved in this sate, call can be redirected if an alternate contact address has been set using function \fBlinphone_core_set_presence_info()\fP 
.TP
\fB\fILinphoneStatusAltService \fP\fP
Using another messaging service 
.TP
\fB\fILinphoneStatusPending \fP\fP
Pending 
.SH "Function Documentation"
.PP 
.SS "\fBLinphoneFriend\fP* linphone_friend_new ()"Contructor 
.PP
\fBReturns:\fP
.RS 4
a new empty \fBLinphoneFriend\fP 
.RE
.PP

.SS "\fBLinphoneFriend\fP* linphone_friend_new_with_addr (const char *addr)"Contructor same as \fBlinphone_friend_new()\fP + \fBlinphone_friend_set_addr()\fP 
.PP
\fBParameters:\fP
.RS 4
\fIaddr\fP a buddy address, must be a sip uri like sip:joe@sip.linphone.org 
.RE
.PP
\fBReturns:\fP
.RS 4
a new \fBLinphoneFriend\fP with \fBaddress initialized \fP 
.RE
.PP

.SS "void linphone_friend_destroy (\fBLinphoneFriend\fP *lf)"Destructor 
.PP
\fBParameters:\fP
.RS 4
\fIlf\fP \fBLinphoneFriend\fP object 
.RE
.PP

.SS "int linphone_friend_set_addr (\fBLinphoneFriend\fP *fr, const \fBLinphoneAddress\fP *address)"set \fBLinphoneAddress\fP for this friend 
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP \fBLinphoneFriend\fP object 
.br
\fIaddress\fP \fBLinphoneAddress\fP 
.RE
.PP

.SS "const \fBLinphoneAddress\fP* linphone_friend_get_address (const \fBLinphoneFriend\fP *lf)"get address of this friend 
.PP
\fBParameters:\fP
.RS 4
\fIlf\fP \fBLinphoneFriend\fP object 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBLinphoneAddress\fP 
.RE
.PP

.SS "bool_t linphone_friend_subscribes_enabled (const \fBLinphoneFriend\fP *lf)"get subscription flag value 
.PP
\fBParameters:\fP
.RS 4
\fIlf\fP \fBLinphoneFriend\fP object 
.RE
.PP
\fBReturns:\fP
.RS 4
returns true is subscription is activated for this friend 
.RE
.PP

.SS "int linphone_friend_enable_subscribes (\fBLinphoneFriend\fP *fr, bool_tval)"Configure \fBLinphoneFriend\fP to subscribe to presence information 
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP \fBLinphoneFriend\fP object 
.br
\fIval\fP if TRUE this friend will receive subscription message 
.RE
.PP

.SS "int linphone_friend_set_inc_subscribe_policy (\fBLinphoneFriend\fP *fr, \fBLinphoneSubscribePolicy\fPpol)"Configure incoming subscription policy for this friend'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP \fBLinphoneFriend\fP object 
.br
\fIpol\fP \fBLinphoneSubscribePolicy\fP policy to apply'\&. 
.RE
.PP

.SS "\fBLinphoneSubscribePolicy\fP linphone_friend_get_inc_subscribe_policy (const \fBLinphoneFriend\fP *lf)"get current subscription policy for this \fBLinphoneFriend\fP 
.PP
\fBParameters:\fP
.RS 4
\fIlf\fP \fBLinphoneFriend\fP object 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBLinphoneSubscribePolicy\fP 
.RE
.PP

.SS "void linphone_friend_edit (\fBLinphoneFriend\fP *fr)"Starts editing a friend configuration'\&.
.PP
Because friend configuration must be consistent, applications MUST call \fBlinphone_friend_edit()\fP before doing any attempts to modify friend configuration (such as \fBaddress \fP or \fBsubscription policy\fP and so on)'\&. Once the modifications are done, then the application must call \fBlinphone_friend_done()\fP to commit the changes'\&. 
.SS "void linphone_friend_done (\fBLinphoneFriend\fP *fr)"Commits modification made to the friend configuration'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP \fBLinphoneFriend\fP object 
.RE
.PP

.SS "\fBLinphoneOnlineStatus\fP linphone_friend_get_status (const \fBLinphoneFriend\fP *lf)"get friend status 
.PP
\fBReturns:\fP
.RS 4
\fBLinphoneOnlineStatus\fP 
.RE
.PP

.SS "const char* linphone_online_status_to_string (\fBLinphoneOnlineStatus\fPss)"return humain readable presence status 
.PP
\fBParameters:\fP
.RS 4
\fIss\fP 
.RE
.PP

.SS "void linphone_core_set_presence_info (\fBLinphoneCore\fP *lc, intminutes_away, const char *alternative_contact, \fBLinphoneOnlineStatus\fPos)"Set my presence status 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.br
\fIminutes_away\fP how long in away 
.br
\fIalternative_contact\fP sip uri used to redirect call in state \fBLinphoneStatusMoved\fP 
.br
\fIos\fP \fBLinphoneOnlineStatus\fP 
.RE
.PP

.SS "\fBLinphoneOnlineStatus\fP linphone_core_get_presence_info (const \fBLinphoneCore\fP *lc)"get my presence status 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBLinphoneOnlineStatus\fP 
.RE
.PP

.SS "void linphone_core_add_friend (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *fr)"Add a friend to the current buddy list, if \fBsubscription attribute \fP is set, a SIP SUBSCRIBE message is sent'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.br
\fIfr\fP \fBLinphoneFriend\fP to add 
.RE
.PP

.SS "void linphone_core_remove_friend (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *fr)"remove a friend from the buddy list 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.br
\fIfr\fP \fBLinphoneFriend\fP to add 
.RE
.PP

.SS "void linphone_core_reject_subscriber (\fBLinphoneCore\fP *lc, \fBLinphoneFriend\fP *lf)"Black list a friend'\&. same as \fBlinphone_friend_set_inc_subscribe_policy()\fP with \fBLinphoneSPDeny\fP policy; 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.br
\fIlf\fP \fBLinphoneFriend\fP to add 
.RE
.PP

.SS "const MSList* linphone_core_get_friend_list (const \fBLinphoneCore\fP *lc)"get Buddy list of LinphoneFriend 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.RE
.PP

.SS "void linphone_core_notify_all_friends (\fBLinphoneCore\fP *lc, \fBLinphoneOnlineStatus\fPos)"notify all friends that have subscribed 
.PP
\fBParameters:\fP
.RS 4
\fIlc\fP \fBLinphoneCore\fP object 
.br
\fIos\fP \fBLinphoneOnlineStatus\fP to notify 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for liblinphone from the source code'\&.
